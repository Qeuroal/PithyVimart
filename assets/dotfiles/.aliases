#! vim:ft=bash:

# PATH
if [ -d "$HOME/.bin" ] ;
  then PATH="$HOME/.bin:$PATH"
fi

if [ -d "$HOME/.local/bin" ] ;
  then PATH="$HOME/.local/bin:$PATH"
fi

if [ -d "$HOME/.emacs.d/bin" ] ;
  then PATH="$HOME/.emacs.d/bin:$PATH"
fi

if [ -d "$HOME/Applications" ] ;
  then PATH="$HOME/Applications:$PATH"
fi

if [ -d "/var/lib/flatpak/exports/bin/" ] ;
  then PATH="/var/lib/flatpak/exports/bin/:$PATH"
fi

if [ -d "$HOME/.config/emacs/bin/" ] ;
  then PATH="$HOME/.config/emacs/bin/:$PATH"
fi

# proxy
if [[ "$(uname)" = 'Linux' ]]; then
    alias la="ls -ah"
    alias setproxy='export HTTP_PROXY=http://127.0.0.1:${PROXY_PORT:-7890} HTTPS_PROXY=http://127.0.0.1:${PROXY_PORT:-7890} FTP_PROXY=http://127.0.0.1:${PROXY_PORT:-7890} ALL_PROXY=socks://127.0.0.1:${PROXY_PORT:-7890} NO_PROXY=localhost,127.0.0.0/8,::1 http_proxy=http://127.0.0.1:${PROXY_PORT:-7890} https_proxy=http://127.0.0.1:${PROXY_PORT:-7890} ftp_proxy=http://127.0.0.1:${PROXY_PORT:-7890} all_proxy=socks://127.0.0.1:${PROXY_PORT:-7890} no_proxy=localhost,127.0.0.0/8,::1'
    alias unsetproxy="unset HTTP_PROXY HTTPS_PROXY FTP_PROXY ALL_PROXY NO_PROXY http_proxy https_proxy ftp_proxy all_proxy no_proxy"
    alias sk="slock"
elif [[ "$(uname)" = 'Darwin' ]]; then
    alias openmd="open -a Typora"
    alias la="ls -ah"
    alias setproxy='export HTTP_PROXY=http://127.0.0.1:${PROXY_PORT:-7890} HTTPS_PROXY=http://127.0.0.1:${PROXY_PORT:-7890} FTP_PROXY=http://127.0.0.1:${PROXY_PORT:-7890} ALL_PROXY=socks://127.0.0.1:${PROXY_PORT:-7890} NO_PROXY=localhost,127.0.0.0/8,::1 http_proxy=http://127.0.0.1:${PROXY_PORT:-7890} https_proxy=http://127.0.0.1:${PROXY_PORT:-7890} ftp_proxy=http://127.0.0.1:${PROXY_PORT:-7890} all_proxy=socks://127.0.0.1:${PROXY_PORT:-7890} no_proxy=localhost,127.0.0.0/8,::1'
    alias unsetproxy="unset HTTP_PROXY HTTPS_PROXY FTP_PROXY ALL_PROXY NO_PROXY http_proxy https_proxy ftp_proxy all_proxy no_proxy"
else
    echo "not support $(uname)"
fi

alias gtags="ctags --fields=+iaS --extra=+q --c-kinds=+p -R ."

# type ranger &> /dev/null
if command -v ranger > /dev/null; then
    alias ra='ranger --choosedir=$HOME/.rangerdir; LASTDIR=`cat $HOME/.rangerdir`; cd "$LASTDIR"'
fi

# type joshuto &> /dev/null
if command -v joshuto > /dev/null; then
    function joshuto_remain() {
        ID="$$"
        mkdir -p /tmp/$USER
        OUTPUT_FILE="/tmp/$USER/joshuto-cwd-$ID"
        env joshuto --output-file "$OUTPUT_FILE" $@
        exit_code=$?

        case "$exit_code" in
            # regular exit
            0)
                ;;
            # output contains current directory
            101)
                JOSHUTO_CWD=$(cat "$OUTPUT_FILE")
                cd "$JOSHUTO_CWD"
                ;;
            # output selected files
            102)
                ;;
            *)
                echo "Exit code: $exit_code"
                ;;
        esac
        rm -rf $OUTPUT_FILE
    }
    alias jr='joshuto_remain'
fi

# nvim replace vim
if command -v nvim > /dev/null; then
    alias vim="nvim -V1"
    alias vi="vim"
    alias vimdiff="vim -d"
fi
alias vim.="vim ."

# curl
alias curla='curl -A "Google Chrome"'
alias curlao='curl -A "Google Chrome" -JLO'

# git
alias gitm='git commit -m'
alias gita='git commit --amend'
alias gitd='git diff'
alias gits='git status -s'
alias gitsv='git status'
alias gitc='git clone'
alias gitcr='git clone --recursive'
alias git_local_help="echo 'git config --local user.name \$GIT_USERNAME \ngit config --local user.email \$GIT_USERMAIL \ngit config --local credential.helper store \ngit config --local --unset credential.helper \ngit config --local credential.username \$GIT_USERNAME\\n\\ngit remote rm origin \ngit remote add origin \$GIT_REMOTE_URL \ngit push --set-upstream origin master'"
alias git_local_user="[ -n \"\$GIT_USERNAME\" -a -n \"\$GIT_USERMAIL\" ] && echo 'modify git info' && git config --local user.name \$GIT_USERNAME && git config --local user.email \$GIT_USERMAIL && git config --local credential.helper store && git config --local --unset credential.helper && git config --local credential.username \$GIT_USERNAME"

# tmux
alias tls='tmux ls'
alias ta='tmux attach'
alias tt='tmux attach -t'
alias td='tmux detach'
alias tn='tmux new -s'

# tar
alias tarx='tar -zxvf'
alias tarc='tar -zcvf'

# yazi
function y() {
    local tmp="$(mktemp -t "yazi-cwd.XXXXXX")" cwd
    yazi "$@" --cwd-file="$tmp"
    if cwd="$(command cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
        builtin cd -- "$cwd"
    fi
    rm -f -- "$tmp"
}

# aider
alias aidc='aider --model deepseek --set-env all_proxy="" --commit'

# navigation
alias ..='cd ..'
alias ...='cd ../..'
alias .3='cd ../../..'
alias .4='cd ../../../..'
alias .5='cd ../../../../..'

# ssh
alias sshl='ssh -L ${LPORT:-8888}:localhost:${LPORT:-8888}'
alias sshr='ssh -R ${RPORT:-7890}:localhost:${RPORT:-7890}'
# LOCAL/REMOTE_PORT_LOCAL/REMOTE
alias sshld='ssh -L ${LPORTL:-9091}:localhost:${LPORTR:-9090}'
alias sshrd='ssh -R ${RPORTL:-7890}:localhost:${RPORTR:-7890}'
