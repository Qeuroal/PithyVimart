#! vim:ft=bash:

# command -v
alias cmv='command -v'

# proxy
alias setproxy='export HTTP_PROXY=http://${PROXY_IP:-127.0.0.1}:${PROXY_PORT:-7890} HTTPS_PROXY=http://${PROXY_IP:-127.0.0.1}:${PROXY_PORT:-7890} FTP_PROXY=http://${PROXY_IP:-127.0.0.1}:${PROXY_PORT:-7890} ALL_PROXY=socks://${PROXY_IP:-127.0.0.1}:${PROXY_PORT:-7890} NO_PROXY=localhost,127.0.0.0/8,::1 http_proxy=http://${PROXY_IP:-127.0.0.1}:${PROXY_PORT:-7890} https_proxy=http://${PROXY_IP:-127.0.0.1}:${PROXY_PORT:-7890} ftp_proxy=http://${PROXY_IP:-127.0.0.1}:${PROXY_PORT:-7890} all_proxy=socks://${PROXY_IP:-127.0.0.1}:${PROXY_PORT:-7890} no_proxy=localhost,127.0.0.0/8,::1'
alias unsetproxy="unset HTTP_PROXY HTTPS_PROXY FTP_PROXY ALL_PROXY NO_PROXY http_proxy https_proxy ftp_proxy all_proxy no_proxy"

# slock
alias sk="slock"

# typora
[[ "$(uname)" == 'Darwin' ]] && alias openmd="open -a Typora"

alias gtags="ctags --fields=+iaS --extra=+q --c-kinds=+p -R ."

# nvim
if command -v nvim &> /dev/null; then
    alias vi='nvim -V1'
    alias vidiff='nvim -V1 -d'
    alias vim='nvim -V1'
    alias vimdiff='nvim -V1 -d'
fi
alias vi.="vi ."
alias vim.="vim ."
alias rmshada='rm -i -v $HOME/.local/state/nvim/shada/main.shada'

# curl
alias curla='curl -A "Google Chrome"'
alias curlao='curl -A "Google Chrome" -JLO'

# git
alias gitlc='git log -n 1 | grep "commit " | awk '"'"'{print $2}'"'"
alias gitln='git log -n'
alias gitm='git commit -m'
alias gita='git commit --amend'
alias gitd='git diff'
alias gits='git status -s'
alias gitsv='git status'
alias gitc='git clone'
alias gitcr='git clone --recursive'
alias git_local_help="echo 'git config --local user.name \$GIT_USERNAME \ngit config --local user.email \$GIT_USERMAIL \ngit config --local credential.helper store \ngit config --local --unset credential.helper \ngit config --local credential.username \$GIT_USERNAME\\n\\ngit remote rm origin \ngit remote add origin \$GIT_REMOTE_URL \ngit push --set-upstream origin master'"
alias git_local_user="[ -n \"\$GIT_USERNAME\" -a -n \"\$GIT_USERMAIL\" ] && echo 'modify git info' && git config --local user.name \$GIT_USERNAME && git config --local user.email \$GIT_USERMAIL && git config --local credential.helper store && git config --local --unset credential.helper && git config --local credential.username \$GIT_USERNAME"

# tmux
alias tls='tmux ls'
alias ta='tmux attach'
alias tt='tmux attach -t'
alias td='tmux detach'
alias tn='tmux new -s'

# tar
alias tarx='tar -zxvf'
alias tarc='tar -zcvf'

# yazi
function y() {
    local tmp="$(mktemp -t "yazi-cwd.XXXXXX")" cwd
    yazi "$@" --cwd-file="$tmp"
    if cwd="$(command cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
        builtin cd -- "$cwd"
    fi
    rm -f -- "$tmp"
}

# aider
alias aidc='aider --model deepseek --set-env all_proxy="" --commit'

# navigation
alias ..='cd ..'
alias cd.='cd $(realpath .)'
alias ...='cd ../..'
alias .3='cd ../../..'
alias .4='cd ../../../..'
alias .5='cd ../../../../..'

# ssh
alias sshl='ssh -L ${LPORT:-8888}:localhost:${LPORT:-8888}'
alias sshr='ssh -R ${RPORT:-7890}:localhost:${RPORT:-7890}'
# LOCAL/REMOTE_PORT_LOCAL/REMOTE
alias sshld='ssh -L ${LPORTL:-9091}:localhost:${LPORTR:-9090}'
alias sshrd='ssh -R ${RPORTL:-7890}:localhost:${RPORTR:-7890}'

# Changing "ls" to "eza"
if command -v eza &> /dev/null; then
    alias ls='eza --color=always --group-directories-first' # ls
    alias la='eza -a --color=always --group-directories-first'  # all files and dirs
    alias ll='eza -l --color=always --group-directories-first'  # long format
    alias l='eza -al --color=always --group-directories-first'  # long format for all files and dir
    alias lla='eza -al --color=always --group-directories-first'  # long format for all files and dir
    alias lt='eza -aT --color=always --group-directories-first' # tree listing
    alias l.='eza -al --color=always --group-directories-first ../' # ls on the PARENT directory
    alias l..='eza -al --color=always --group-directories-first ../../' # ls on directory 2 levels up
    alias l...='eza -al --color=always --group-directories-first ../../../' # ls on directory 3 levels up
fi

# pacman and yay
alias pacsyu='sudo pacman -Syu'                  # update only standard pkgs
alias pacsyyu='sudo pacman -Syyu'                # Refresh pkglist & update standard pkgs
alias parsua='paru -Sua --noconfirm'             # update only AUR pkgs (paru)
alias parsyu='paru -Syu --noconfirm'             # update standard pkgs and AUR pkgs (paru)
alias unlock='sudo rm /var/lib/pacman/db.lck'    # remove pacman lock
alias orphan='sudo pacman -Rns $(pacman -Qtdq)' # remove orphaned packages (DANGEROUS!)

# adding flags
alias df='df -h'               # human-readable sizes
alias free='free -m'           # show sizes in MB
# alias grep='grep --color=auto' # colorize output (good for log files)

# gpu
if command -v gpustat &> /dev/null; then
    alias gpust='gpustat --color -cui'
elif command -v nvitop &> /dev/null; then
    alias gpust='nvitop'
elif command -v nvidia-smi &> /dev/null; then
    command -v watch &> /dev/null && alias gpust="watch -n 1 nvidia-smi" || alias gpust="nvidia-smi -l 1"
fi

# ip
alias ipst='curl ipinfo.io'

# link
# WARNING: export LN_TARGET_DIR="~/.local/bin" 中 ~ 不会展开
# WARNING: 正确用法: export LN_TARGET_DIR=~/.local/bin 或 export LN_TARGET_DIR="$HOME/.local/bin"
alias abslink_curdir=' [[ -f /bin/ls ]] && \
    ([[ -d ${LN_TARGET_DIR:-$HOME/.local/bin/} ]] && ln -si $(realpath $(/bin/ls)) ${LN_TARGET_DIR:-$HOME/.local/bin/} && echo "link $(realpath $(/bin/ls)) TO ${LN_TARGET_DIR:-$HOME/.local/bin/}" || echo "${LN_TARGET_DIR:-$HOME/.local/bin/} does not exist") \
    || echo "/bin/ls does not exist"'
[[ $(uname) == "Linux" ]] && alias rellink_curdir=' [[ -f /bin/ls ]] && \
    ([[ -d ${LN_TARGET_DIR:-$HOME/.local/bin/} ]] && ln -sri $(/bin/ls) ${LN_TARGET_DIR:-$HOME/.local/bin/} && echo "link $(/bin/ls) TO ${LN_TARGET_DIR:-$HOME/.local/bin/}" || echo "${LN_TARGET_DIR:-$HOME/.local/bin/} does not exist") \
    || echo "/bin/ls does not exist"'

